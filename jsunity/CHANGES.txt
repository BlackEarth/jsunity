  - Pass test name to test function and setUp/tearDown
  - Fixed failing test case tearDown scope
  - Removed "invalid function" exception that doesn't seem to be possible, for
    100% code coverage
  - Bound the test suite object on setUp and tearDown calls

0.6
  - Improved assertion messages, added custom message argument
  - Renamed assert[Not]Equals to assert[Not]Equal and made it more lax than the
    new assert[Not]Identical
  - Added more assertion functions
  - Made missing test suite names undefined instead of empty string
  - Fixed function probing logic so that an outer function doesn't shield
    an inner function with the same name
  - Added compile
  - Introduced TestSuite and TestResults classes
  - Fixed test suite scope to use the object for object test suites instead
    of the generated test suite object
  - Test cases are run within the scope of the test suite (as "this")
  - Fixed multiple test suite name concatenation to work with AppJet

0.5
  - Added jsUnity.env that contains defaultScope and getDate
  - Added results.duration
  - Proper plural/singular count messages
  - Made test runners proper HTML
  - run() now can take multiple test suites as arguments
  - Renamed globalScope to defaultScope

0.4
  - Fixed jsUnity assignment method to make JScript happy
  - Removed the need for runner functions
  - Rewired suite type handling
  - Added probing to array suites
  - Array suites now support both strings and functions as items
  - Renamed results.name to results.suiteName

0.3
  - Improved function parser to handle nested functions and comments
  - Enabled all suite types
  - Fixed default assertion scope
  - Fixed test suite name passing bug
  - Made function parsing regex more lax to work with AppJet

0.2
  - Moved default assertions into defaultAssertions, out of the global scope
  - Assertion set can be overridden
  - Added attachAssertions

0.1
  - Initial release
  - Supports only function-style test suites